[project]
name = "securechain-depex"
version = "1.1.0"
description = "Depex is a tool that allows you to reason over the entire configuration space of the Software Supply Chain of an open-source software repository."
readme = "README.md"
requires-python = ">=3.13"
license = { text = "GPL-3.0-or-later" }
dependencies = [
    "setuptools==80.9.0",
    "fastapi==0.116.1",
    "uvicorn==0.35.0",
    "pydantic-settings==2.10.1",
    "apscheduler==3.11.0",
    "motor==3.7.1",
    "python-dotenv==1.1.1",
    "python-dateutil==2.9.0",
    "neo4j==5.28.1",
    "univers==31.0.0",
    "z3-solver==4.15.3.0",
    "toml==0.10.2",
    "aiohttp==3.12.14",
    "aiocache==0.12.3",
    "aiofiles==24.1.0",
    "pyjwt==2.10.1",
    "pyyaml==6.0.2",
    "slowapi==0.1.9",
    "redis==5.2.1",
    "regex==2025.10.23",
]

[project.optional-dependencies]
dev = [
    "ruff==0.14.0",
]
test = [
    "pytest==8.4.2",
    "pytest-asyncio==1.2.0",
    "pytest-cov>=7.0.0",
    "httpx==0.28.1",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["app"]
exclude = ["tests*", "dev*"]

[tool.hatch.build.targets.sdist]
exclude = ["tests*", "dev*"]

[tool.ruff.lint]
select = [
    "A",   # prevent using keywords that clobber python builtins
    "B",   # bugbear: security warnings
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "RUF"  # the ruff developer's own rules
]

ignore = [
    "E501",  # Suppress line-too-long warnings: trust black's judgement on this one
    "C901",  # Complex structure
    "A004",  # Module attribute shadowing
    "B008",  # Do not perform function calls in argument defaults
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=app",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests",
    "database: Tests requiring database",
]
asyncio_mode = "auto"
